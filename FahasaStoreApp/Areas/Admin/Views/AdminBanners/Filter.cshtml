@using FahasaStore.Models
@using FahasaStoreApp.Components
@using FahasaStoreApp.Models.DTOs
@using FahasaStoreApp.Models.ViewModels
@model FilterVM<BannerExtend>

@{
    var paged = Model.Paged;
    var bannerExtend = new BannerExtend();
}

<div id="totalItemDiv" TotalItemCount="@paged.PagedNavigation.TotalItemCount">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => bannerExtend.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => bannerExtend.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => bannerExtend.ImageUrl)
                </th>
                <th>
                    @Html.DisplayNameFor(model => bannerExtend.CreatedAt)
                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in paged.Items)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        <img src="@item.ImageUrl" alt="Image" width="50" height="50" class="object-fit-contain" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedAt)
                    </td>
                    <td>
                        <a href="/Admin/AdminBanners/Edit" IdValue="@item.Id" class="btn btn-outline-primary" onclick="HandlerCRUD(this, event)"><i class="bi bi-pencil"></i></a> |
                        <a href="/Admin/AdminBanners/Delete" IdValue="@item.Id" class="btn btn-outline-danger" onclick="HandlerCRUD(this, event)"><i class="bi bi-trash3"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @(await Html.RenderComponentAsync<PaginatedComponent>(RenderMode.ServerPrerendered, new { pagedNavigation = paged.PagedNavigation, formId = "Filter", renderINId = "boxData" }))
</div>

<script>
    $('#TotalItemCount').text($('#totalItemDiv').attr('TotalItemCount'));
</script>